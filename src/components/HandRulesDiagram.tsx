import { useState } from 'react';
import { handPositions } from '../data/handRules';

export const HandRulesDiagram = () => {
  const [selectedPos, setSelectedPos] = useState<number | null>(null);

  const getFingerColor = (position: number) => {
    if (position >= 1 && position <= 3) return 'from-green-400 to-green-500'; // Xu√¢n
    if (position >= 4 && position <= 6) return 'from-red-400 to-red-500'; // H√®
    if (position >= 7 && position <= 9) return 'from-yellow-400 to-yellow-500'; // Thu
    return 'from-blue-400 to-blue-500'; // ƒê√¥ng
  };

  const selected = selectedPos ? handPositions.find(p => p.position === selectedPos) : null;

  return (
    <div className="space-y-8">
      {/* Title */}
      <div className="text-center">
        <h2 className="text-4xl font-black mb-4 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
          S∆° ƒê·ªì B√†n Tay
        </h2>
        <p className="text-gray-700 text-lg">
          12 ƒê·ªãa Chi - 12 Th√°ng - 4 M√πa tr√™n B√†n Tay Tr√°i
        </p>
      </div>

      <div className="grid lg:grid-cols-2 gap-8">
        {/* Hand Diagram */}
        <div className="bg-white rounded-3xl p-8 shadow-2xl">
          <h3 className="text-2xl font-bold text-center mb-6 text-gray-800">
            üñê B√†n Tay Tr√°i (L√≤ng b√†n tay h∆∞·ªõng v√†o m√¨nh)
          </h3>

          {/* Interactive Hand */}
          <div className="relative aspect-[3/4] max-w-md mx-auto">
            {/* Ng√≥n tr·ªè (tr√°i nh·∫•t) - T·ª´ tr√™n xu·ªëng: T·ªã(4) ‚Üí Th√¨n(3) ‚Üí M√£o(2) ‚Üí D·∫ßn(1) */}
            <div className="absolute left-0 top-0 w-1/5 h-full flex flex-col">
              {[4, 3, 2, 1].map((pos) => {
                const info = handPositions.find(p => p.position === pos);
                return (
                  <button
                    key={pos}
                    onClick={() => setSelectedPos(pos)}
                    className={`flex-1 m-1 rounded-xl font-bold text-white transition-all hover:scale-105 ${
                      selectedPos === pos ? 'ring-4 ring-purple-600 scale-110' : ''
                    } bg-gradient-to-br ${getFingerColor(pos)} shadow-lg`}
                  >
                    <div className="text-xs">{info?.diaChi}</div>
                    <div className="text-[10px]">T{info?.thang}</div>
                  </button>
                );
              })}
            </div>

            {/* Ng√≥n gi·ªØa - Ng·ªç(5) tr√™n ‚Üí S·ª≠u(12) d∆∞·ªõi */}
            <div className="absolute left-[25%] top-0 w-1/5 h-2/4 flex flex-col">
              {[5, 12].map((pos) => {
                const info = handPositions.find(p => p.position === pos);
                return (
                  <button
                    key={pos}
                    onClick={() => setSelectedPos(pos)}
                    className={`flex-1 m-1 rounded-xl font-bold text-white transition-all hover:scale-105 ${
                      selectedPos === pos ? 'ring-4 ring-purple-600 scale-110' : ''
                    } bg-gradient-to-br ${getFingerColor(pos)} shadow-lg`}
                  >
                    <div className="text-xs">{info?.diaChi}</div>
                    <div className="text-[10px]">T{info?.thang}</div>
                  </button>
                );
              })}
            </div>

            {/* Ng√≥n √°p √∫t - M√πi(6) tr√™n ‚Üí T√Ω(11) d∆∞·ªõi */}
            <div className="absolute left-[50%] top-[25%] w-1/5 h-2/4 flex flex-col">
              {[6, 11].map((pos) => {
                const info = handPositions.find(p => p.position === pos);
                return (
                  <button
                    key={pos}
                    onClick={() => setSelectedPos(pos)}
                    className={`flex-1 m-1 rounded-xl font-bold text-white transition-all hover:scale-105 ${
                      selectedPos === pos ? 'ring-4 ring-purple-600 scale-110' : ''
                    } bg-gradient-to-br ${getFingerColor(pos)} shadow-lg`}
                  >
                    <div className="text-xs">{info?.diaChi}</div>
                    <div className="text-[10px]">T{info?.thang}</div>
                  </button>
                );
              })}
            </div>

            {/* Ng√≥n √∫t (ph·∫£i nh·∫•t) - Th√¢n(7) ‚Üí D·∫≠u(8) ‚Üí Tu·∫•t(9) ‚Üí H·ª£i(10) */}
            <div className="absolute right-0 top-0 w-1/5 h-full flex flex-col">
              {[7, 8, 9, 10].map((pos) => {
                const info = handPositions.find(p => p.position === pos);
                return (
                  <button
                    key={pos}
                    onClick={() => setSelectedPos(pos)}
                    className={`flex-1 m-1 rounded-xl font-bold text-white transition-all hover:scale-105 ${
                      selectedPos === pos ? 'ring-4 ring-purple-600 scale-110' : ''
                    } bg-gradient-to-br ${getFingerColor(pos)} shadow-lg`}
                  >
                    <div className="text-xs">{info?.diaChi}</div>
                    <div className="text-[10px]">T{info?.thang}</div>
                  </button>
                );
              })}
            </div>

            {/* Palm (L√≤ng b√†n tay) - ·∫©n ƒë·ªÉ kh√¥ng ƒë√® l√™n */}
            <div className="absolute bottom-0 left-0 right-0 h-1/5 bg-gradient-to-br from-orange-100 to-orange-200 rounded-b-full opacity-30">
            </div>
          </div>

          {/* Instructions */}
          <div className="mt-6 bg-purple-50 rounded-xl p-4">
            <p className="text-sm text-gray-700 text-center">
              üí° <span className="font-semibold">Click v√†o m·ªói v·ªã tr√≠</span> ƒë·ªÉ xem chi ti·∫øt
            </p>
          </div>
        </div>

        {/* Details Panel */}
        <div className="space-y-6">
          {selected ? (
            <div className={`bg-gradient-to-br ${getFingerColor(selected.position)} text-white rounded-3xl p-8 shadow-2xl`}>
              <div className="text-center mb-6">
                <div className="text-6xl font-black mb-2">{selected.diaChi}</div>
                <div className="text-2xl opacity-90">Th√°ng {selected.thang}</div>
              </div>

              <div className="space-y-4 bg-white/20 backdrop-blur rounded-2xl p-6">
                <div>
                  <div className="text-sm opacity-80">V·ªã tr√≠:</div>
                  <div className="text-lg font-bold">{selected.finger}</div>
                </div>
                <div>
                  <div className="text-sm opacity-80">Ng≈© H√†nh:</div>
                  <div className="text-lg font-bold">{selected.nguHanh}</div>
                </div>
                <div>
                  <div className="text-sm opacity-80">M√πa:</div>
                  <div className="text-lg font-bold">{selected.mua}</div>
                </div>
                <div>
                  <div className="text-sm opacity-80">√ù nghƒ©a:</div>
                  <div className="text-base">{selected.yNghia}</div>
                </div>
              </div>
            </div>
          ) : (
            <div className="bg-gradient-to-br from-purple-100 to-pink-100 rounded-3xl p-8 shadow-xl">
              <div className="text-center">
                <div className="text-6xl mb-4">üëà</div>
                <h3 className="text-2xl font-bold text-gray-800 mb-4">
                  Ch·ªçn m·ªôt v·ªã tr√≠ tr√™n b√†n tay
                </h3>
                <p className="text-gray-600">
                  Click v√†o b·∫•t k·ª≥ ƒë·ªët ng√≥n tay n√†o ƒë·ªÉ xem th√¥ng tin chi ti·∫øt v·ªÅ ƒê·ªãa Chi, th√°ng, v√† √Ω nghƒ©a
                </p>
              </div>
            </div>
          )}

          {/* Legend */}
          <div className="bg-white rounded-2xl p-6 shadow-xl">
            <h4 className="font-bold text-gray-800 mb-4 text-center">üé® B·∫£ng M√†u M√πa</h4>
            <div className="grid grid-cols-2 gap-3">
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-green-400 to-green-500"></div>
                <div>
                  <div className="font-semibold text-gray-800">Xu√¢n</div>
                  <div className="text-xs text-gray-600">D·∫ßn-M√£o-Th√¨n</div>
                </div>
              </div>
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-red-400 to-red-500"></div>
                <div>
                  <div className="font-semibold text-gray-800">H√®</div>
                  <div className="text-xs text-gray-600">T·ªã-Ng·ªç-M√πi</div>
                </div>
              </div>
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-yellow-400 to-yellow-500"></div>
                <div>
                  <div className="font-semibold text-gray-800">Thu</div>
                  <div className="text-xs text-gray-600">Th√¢n-D·∫≠u-Tu·∫•t</div>
                </div>
              </div>
              <div className="flex items-center gap-3">
                <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-blue-400 to-blue-500"></div>
                <div>
                  <div className="font-semibold text-gray-800">ƒê√¥ng</div>
                  <div className="text-xs text-gray-600">H·ª£i-T√Ω-S·ª≠u</div>
                </div>
              </div>
            </div>
          </div>

          {/* Quick Tips */}
          <div className="bg-gradient-to-br from-amber-50 to-orange-50 rounded-2xl p-6 shadow-lg">
            <h4 className="font-bold text-orange-600 mb-3 text-center">‚ö° M·∫πo Ghi Nh·ªõ</h4>
            <ul className="text-sm text-gray-700 space-y-2">
              <li>‚Ä¢ <span className="font-semibold">1 ng√≥n = 1 m√πa</span> (3 th√°ng)</li>
              <li>‚Ä¢ <span className="font-semibold">B·∫Øt ƒë·∫ßu t·ª´ D·∫ßn</span> (ƒë·ªët d∆∞·ªõi ng√≥n tr·ªè)</li>
              <li>‚Ä¢ <span className="font-semibold">ƒêi theo chi·ªÅu kim ƒë·ªìng h·ªì</span></li>
              <li>‚Ä¢ <span className="font-semibold">4 ng√≥n √ó 3 ƒë·ªët = 12 chi</span></li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};
