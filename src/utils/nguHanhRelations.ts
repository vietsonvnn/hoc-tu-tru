import type { NguHanhType, TrangThaiType } from '../types';

// M√¥ t·∫£ tr·∫°ng th√°i
export const getTrangThaiInfo = (trangThai: TrangThaiType) => {
  const info = {
    Vuong: {
      label: 'V∆∞·ª£ng',
      description: 'Ph√°t tri·ªÉn r·ª±c r·ª° nh·∫•t, ƒë·ªânh cao s·ª©c m·∫°nh',
      color: 'bg-emerald-500/20 border-emerald-500',
      icon: 'üí™',
    },
    Tuong: {
      label: 'T∆∞·ªüng',
      description: 'ƒê∆∞·ª£c nu√¥i d∆∞·ª°ng, chu·∫©n b·ªã ph√°t tri·ªÉn m·∫°nh',
      color: 'bg-blue-500/20 border-blue-500',
      icon: 'üå±',
    },
    Huu: {
      label: 'H∆∞u',
      description: 'Y·∫øu d·∫ßn, ngh·ªâ ng∆°i, kh√¥ng l√†m ƒë∆∞·ª£c vi·ªác',
      color: 'bg-yellow-500/20 border-yellow-500',
      icon: 'üò¥',
    },
    Tu: {
      label: 'T√π',
      description: 'B·ªã kh·ªëng ch·∫ø, b√≠ b√°ch, kh√¥ng ph√°t tri·ªÉn ƒë∆∞·ª£c',
      color: 'bg-orange-500/20 border-orange-500',
      icon: 'üîí',
    },
    Tu2: {
      label: 'T·ª≠',
      description: 'Y·∫øu nh·∫•t, nh∆∞ ch·∫øt ƒëi',
      color: 'bg-red-500/20 border-red-500',
      icon: 'üíÄ',
    },
  };

  // Handle both 'Tu' cases
  return trangThai === 'Tu' ? info.Tu : info[trangThai as keyof typeof info] || info.Tu;
};

// Quan h·ªá T∆∞∆°ng Sinh
export const getQuanHeSinh = (loai: NguHanhType) => {
  const relations = {
    Thuy: { sinh: 'M·ªôc', beSinh: 'Kim' },
    Moc: { sinh: 'H·ªèa', beSinh: 'Th·ªßy' },
    Hoa: { sinh: 'Th·ªï', beSinh: 'M·ªôc' },
    Tho: { sinh: 'Kim', beSinh: 'H·ªèa' },
    Kim: { sinh: 'Th·ªßy', beSinh: 'Th·ªï' },
  };
  return relations[loai];
};

// Quan h·ªá T∆∞∆°ng Kh·∫Øc
export const getQuanHeKhac = (loai: NguHanhType) => {
  const relations = {
    Moc: { khac: 'Th·ªï', beKhac: 'Kim' },
    Tho: { khac: 'Th·ªßy', beKhac: 'M·ªôc' },
    Thuy: { khac: 'H·ªèa', beKhac: 'Th·ªï' },
    Hoa: { khac: 'Kim', beKhac: 'Th·ªßy' },
    Kim: { khac: 'M·ªôc', beKhac: 'H·ªèa' },
  };
  return relations[loai];
};

// T√™n m√πa theo key
export const getMuaName = (key: string) => {
  const names: Record<string, string> = {
    xuan: 'Xu√¢n',
    ha: 'H·∫°',
    thu: 'Thu',
    dong: 'ƒê√¥ng',
    tuQuy: 'T·ª© Qu√Ω',
  };
  return names[key] || key;
};
